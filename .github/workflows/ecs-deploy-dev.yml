name: Deploy to ECS

on:
  push:
    branches:
      - dev

env:
  AWS_REGION: ap-southeast-1
  ECR_REPO: 703671927585.dkr.ecr.ap-southeast-1.amazonaws.com/multi-env-backend-dev
  ENV: dev                          # or prod depending on branch/workflow

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and Push Docker image
      run: |
        docker build -t $ECR_REPO:${{ github.sha }} .
        docker push $ECR_REPO:${{ github.sha }}

    - name: Fill taskdef.json with variables
      run: |
        sed "s|\${IMAGE_URI}|${{ env.ECR_REPO }}:${{ github.sha }}|g" ecs/taskdef.json |
        sed "s|\${EXECUTION_ROLE}|${{ secrets.ECS_EXECUTION_ROLE_ARN }}-${{ env.ENV }}|g" |
        sed "s|\${ENV}|${{ env.ENV }}|g" > taskdef-filled.json

    - name: Register new ECS task definition
      id: register-task
      run: |
        aws ecs register-task-definition \
          --cli-input-json file://taskdef-filled.json \
          --region ${{ env.AWS_REGION }}

    - name: Update ECS service
      run: |
        aws ecs update-service \
          --cluster ${{ secrets.ECS_CLUSTER_NAME }}-${{ env.ENV }} \
          --service ${{ secrets.ECS_SERVICE_NAME }}-${{ env.ENV }} \
          --force-new-deployment \
          --region ${{ env.AWS_REGION }}
